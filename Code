5.	#include <iostream>
6.	#include <cmath>
7.	#define PI 3.14
8.	
9.	using namespace std;
10.	
11.	int main() {
12.	    // Punkt startowy
13.	    cout << "Podaj X oraz Y punktuy startowego: " << endl;
14.	    double x1;
15.	    double y1;
16.	    cout << "X: ";
17.	    cin >> x1;
18.	    cout << "Y: ";
19.	    cin >> y1;
20.	
21.	// Promien
22.	    cout << "Podaj promien: ";
23.	    double radius;
24.	    cin >> radius;
25.	
26.	    if (radius < 0)
27.	    {
28.	        cout << "Promien nie moze byc mniejszy od 0";
29.	        return 0;
30.	    }
31.	    else
32.	    // Punkt koncowy
33.	    cout << "Podaj X oraz Y punktuy koncowego: " << endl;
34.	    double x2;
35.	    double y2;
36.	    cout << "X: ";
37.	    cin >> x2;
38.	    cout << "Y: ";
39.	    cin >> y2;
40.	
41.	    // obliczenie x3, y3 czolo strzalki
42.	    double x3 = x1 + (x2 - x1) * radius / sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));
43.	    double y3 = y1 + (y2 - y1) * radius / sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));
44.	
45.	    /* x3, y3
46.	    cout << "x3: " << x3 << endl;
47.	    cout << "y3: " << y3 << endl;
48.	    */
49.	
50.	    // Długość ramienia strzalki to 1/10 promienia
51.	    double strzałkaDlugosc = radius / 10;
52.	
53.	    // kat nachylenia w stopniach od 10 do 45
54.	    double kat;
55.	    do {
56.	        cout << "Podaj kat nachylenia strzalki (od 10 do 45): ";
57.	        cin >> kat;
58.	    } while (kat < 1 || kat > 45);
59.	
60.	    // zmiana angle na radians
61.	    double angleRad = kat * PI / 180;
62.	
63.	    // obliczyć wzór na prostą od x1,y1 do x2,y2
64.	    // y = mx + b
65.	    // m = (y2 - y1) / (x2 - x1)
66.	    double m = (y2 - y1) / (x2 - x1);
67.	
68.	    // oblicz stopnie kąta prostej od x1,y1 do x2,y2
69.	    // angle = atan(m) * 180 / PI
70.	
71.	    double katLine = atan(m) * 180 / PI;
72.	
73.	    // oblicz x4,y4 czyli koniec strzałki pod kątem od x3,y3 umieszczonej na prostej m i b
74.	    // korzystając ze wzoru na prostą i kąt
75.	
76.	    double x4 = x3 - strzałkaDlugosc * cos(katLine + angleRad);
77.	    double y4 = y3 - strzałkaDlugosc * sin(katLine + angleRad);
78.	
79.	
80.	    // obliczanie x5, y5 czyli koniec strzałki pod kątem od x3,y3 umieszczonej na linii m i b
81.	    // korzystając ze wzoru na prostą i kąt
82.	
83.	    double x5 = x3 - strzałkaDlugosc * cos(angleRad - katLine);
84.	    double y5 = y3 - strzałkaDlugosc * sin(angleRad - katLine);
85.	
86.	    /* pokaż wszystkie 5 punktów
87.	
88.	    cout << "x1.y1: " << x1 << "." << y1 << endl;
89.	    cout << "x2.y2: " << x2 << "." << y2 << endl;
90.	    cout << "x3.y3: " << x3 << "." << y3 << endl;
91.	    cout << "x4.y4: " << x4 << "." << y4 << endl;
92.	    cout << "x5.y5: " << x5 << "." << y5 << endl;
93.	    */
94.	
95.	    cout << "Punkt opisujacy czolo strzalki X,Y: " << x3 << " ," << y3 << endl;
96.	    cout << "Punkt opisujacy 1 ramie strzalki X,Y: " << x4 << " ," << y4 << endl;
97.	    cout << "Punkt opisujacy 2 ramie strzalki X,Y: " << x5 << " ," << y5 << endl;
98.	
99.	    return 0;
100.	}
